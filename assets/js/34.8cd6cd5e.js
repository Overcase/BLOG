(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{209:function(e,s,r){"use strict";r.r(s);var a=r(0),t=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("div",{staticClass:"content"},[r("p",[e._v("本篇记录使用express+MongoDB建站的过程\n")]),e._v(" "),r("h2",{attrs:{id:"node-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-js","aria-hidden":"true"}},[e._v("#")]),e._v(" Node.js")]),e._v(" "),r("h3",{attrs:{id:"node-版本管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-版本管理","aria-hidden":"true"}},[e._v("#")]),e._v(" Node 版本管理")]),e._v(" "),r("p",[e._v("可以使用 n 或 nvm 来管理")]),e._v(" "),r("p",[e._v("nrm 是一个管理 npm 源的工具")]),e._v(" "),r("h3",{attrs:{id:"require"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#require","aria-hidden":"true"}},[e._v("#")]),e._v(" require")]),e._v(" "),r("p",[e._v("主要用途是加载代码")]),e._v(" "),r("ul",[r("li",[e._v("require 可加载 .js、.json 和 .node 后缀的文件")]),e._v(" "),r("li",[e._v("require 的过程是同步的，所以这样是错误的:")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("setTimeout(() => {\n  module.exports = { a: 'hello' };\n}, 0);\n")])])]),r("p",[e._v("在使用 require 时要避免循环引用")]),e._v(" "),r("h3",{attrs:{id:"exports-和-module-exports"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#exports-和-module-exports","aria-hidden":"true"}},[e._v("#")]),e._v(" exports 和 module.exports")]),e._v(" "),r("p",[e._v("exports 和 module.exports 用来导出代码\nexports 和 module.exports 的区别")]),e._v(" "),r("ul",[r("li",[e._v("module.exports 初始值为一个空对象 {}")]),e._v(" "),r("li",[e._v("exports 是指向的 module.exports 的引用")]),e._v(" "),r("li",[e._v("require() 返回的是 module.exports 而不是 exports")])]),e._v(" "),r("blockquote",[r("p",[e._v("建议直接使用 module.exports")])]),e._v(" "),r("h2",{attrs:{id:"mongodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mongodb","aria-hidden":"true"}},[e._v("#")]),e._v(" MongoDB")]),e._v(" "),r("p",[e._v("见 MongoDB  安装记录 Markdown")]),e._v(" "),r("h2",{attrs:{id:"模板引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模板引擎","aria-hidden":"true"}},[e._v("#")]),e._v(" 模板引擎")]),e._v(" "),r("h3",{attrs:{id:"ejs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ejs","aria-hidden":"true"}},[e._v("#")]),e._v(" ejs")]),e._v(" "),r("p",[r("code",[e._v("<% code %>：运行 JavaScript 代码，不输出")])]),e._v(" "),r("p",[r("code",[e._v("<%= code %>：显示转义后的 HTML内容")])]),e._v(" "),r("p",[r("code",[e._v("<%- code %>：显示原始 HTML 内容")])]),e._v(" "),r("blockquote",[r("p",[e._v("注意：<%= code %> 和 <%- code %> 都可以是 JavaScript 表达式生成的字符串，当变量 code 为普通字符串时，两者没有区别。当 code 比如为 ")]),r("h1",[e._v("hello")]),e._v(" 这种字符串时，<%= code %> 会原样输出 "),r("h1",[e._v("hello")]),e._v("，而 <%- code %> 则会显示 H1 大的 hello 字符串。"),r("p")]),e._v(" "),r("h3",{attrs:{id:"includes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#includes","aria-hidden":"true"}},[e._v("#")]),e._v(" includes")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("<%- include('header') %>\n  <h1><%= name.toUpperCase() %></h1>\n  <p>hello, <%= name %></p>\n<%- include('footer') %>\n")])])]),r("p",[e._v("我们将原来的 users.ejs 拆成出了 header.ejs 和 footer.ejs，并在 users.ejs 通过 ejs 内置的 include 方法引入，从而实现了跟以前一个模板文件相同的功能。")]),e._v(" "),r("p",[r("strong",[e._v("小提示：拆分模板组件通常有两个好处：")])]),e._v(" "),r("ol",[r("li",[e._v("模板可复用，减少重复代码")]),e._v(" "),r("li",[e._v("主模板结构清晰")])]),e._v(" "),r("blockquote",[r("p",[e._v("注意：要用 <%- include('header') %> 而不是 <%= include('header') %>")])]),e._v(" "),r("h2",{attrs:{id:"中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#中间件","aria-hidden":"true"}},[e._v("#")]),e._v(" 中间件")]),e._v(" "),r("p",[e._v("通过 app.use 加载中间件，在中间件中通过 next 将请求传递到下一个中间件，next 可接受一个参数接收错误信息，如果使用了 next(error)，则会返回错误而不会传递到下一个中间件")]),e._v(" "),r("h2",{attrs:{id:"目录结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录结构","aria-hidden":"true"}},[e._v("#")]),e._v(" 目录结构")]),e._v(" "),r("p",[e._v("models: 存放操作数据库的文件\npublic: 存放静态文件，如样式、图片等\nroutes: 存放路由文件\nviews: 存放模板文件\nindex.js: 程序主文件\npackage.json: 存储项目名、描述、作者、依赖等等信息")]),e._v(" "),r("blockquote",[r("p",[e._v("小提示：不知读者发现了没有，我们遵循了 MVC（模型(model)－视图(view)－控制器(controller/route)） 的开发模式。")])]),e._v(" "),r("h2",{attrs:{id:"模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块")]),e._v(" "),r("ol",[r("li",[e._v("express: web 框架")]),e._v(" "),r("li",[e._v("express-session: session 中间件")]),e._v(" "),r("li",[e._v("connect-mongo: 将 session 存储于 mongodb，结合 express-session 使用")]),e._v(" "),r("li",[e._v("connect-flash: 页面通知提示的中间件，基于 session 实现")]),e._v(" "),r("li",[e._v("ejs: 模板")]),e._v(" "),r("li",[e._v("express-formidable: 接收表单及文件的上传中间件")]),e._v(" "),r("li",[e._v("config-lite: 读取配置文件")]),e._v(" "),r("li",[e._v("marked: markdown 解析")]),e._v(" "),r("li",[e._v("moment: 时间格式化")]),e._v(" "),r("li",[e._v("mongolass: mongodb 驱动")]),e._v(" "),r("li",[e._v("objectid-to-timestamp: 根据 ObjectId 生成时间戳")]),e._v(" "),r("li",[e._v("sha1: sha1 加密，用于密码加密")]),e._v(" "),r("li",[e._v("winston: 日志")]),e._v(" "),r("li",[e._v("express-winston: 基于 winston 的用于 express 的日志中间件")])]),e._v(" "),r("h2",{attrs:{id:"app-locals-和-res-locals"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#app-locals-和-res-locals","aria-hidden":"true"}},[e._v("#")]),e._v(" app.locals 和 res.locals")]),e._v(" "),r("p",[e._v("在调用 res.render 的时候，express 合并（merge）了 3 处的结果后传入要渲染的模板，优先级：res.render 传入的对象> res.locals 对象 > app.locals 对象，所以 app.locals 和 res.locals 几乎没有区别，都用来渲染模板，使用上的区别在于："),r("strong",[e._v("app.locals 上通常挂载常量信息（如博客名、描述、作者信息），res.locals 上通常挂载变量信息，即每次请求可能的值都不一样（如请求者信息，res.locals.user = req.session.user）。")])]),e._v(" "),r("h2",{attrs:{id:"错误处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误处理","aria-hidden":"true"}},[e._v("#")]),e._v(" 错误处理")]),e._v(" "),r("p",[e._v("我们使用 "),r("code",[e._v("winston")]),e._v(" 和 "),r("code",[e._v("express-winston")]),e._v(" 记录日志")]),e._v(" "),r("blockquote",[r("p",[e._v("需要注意的是：记录正常请求日志的中间件要放到 routes(app) 之前，记录错误请求日志的中间件要放到 routes(app) 之后。")])])])}],!1,null,null,null);t.options.__file="learnMongoDB.md";s.default=t.exports}}]);