(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{214:function(t,e,a){"use strict";a.r(e);var _=a(0),v=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("p",[t._v("本篇介绍了从零开始使用git,以及git的一些常用命令.\n")]),t._v(" "),a("h2",{attrs:{id:"git初级教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git初级教程","aria-hidden":"true"}},[t._v("#")]),t._v(" git初级教程")]),t._v(" "),a("h3",{attrs:{id:"_1-1-初始化配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-初始化配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 初始化配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("初始化输入自己的GitHub用户名和邮箱")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git config --global user.name "Your Name"\n$ git config --global user.email "email@example.com" \n')])])])]),t._v(" "),a("li",[a("p",[t._v("注意"),a("code",[t._v("git config")]),t._v("命令的"),a("code",[t._v("--global")]),t._v("参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。")])]),t._v(" "),a("li",[a("p",[t._v("所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ mkdir learngit\n$ cd learngit\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2新建到保存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2新建到保存","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2新建到保存")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第二步，通过"),a("code",[t._v("git init")]),t._v("命令把这个目录变成Git可以管理的仓库：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git init\n")])])])]),t._v(" "),a("li",[a("p",[t._v("和把大象放到冰箱需要3步相比，把一个文件放到Git仓库只需要两步。")]),t._v(" "),a("p",[t._v("第一步，用命令"),a("code",[t._v("git add")]),t._v("告诉Git，把文件添加到仓库：")]),t._v(" "),a("p",[t._v("文件名区分大小写")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git add README.txt\n")])])])]),t._v(" "),a("li",[a("p",[t._v("执行上面的命令，没有任何显示，这就对了,说明添加成功。")]),t._v(" "),a("p",[t._v("第二步，用命令"),a("code",[t._v("git commit")]),t._v("告诉Git，把文件提交到仓库：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git commit -m "wrote a readme file"\n')])])])]),t._v(" "),a("li",[a("p",[t._v("简单解释一下"),a("code",[t._v("git commit")]),t._v("命令，"),a("code",[t._v("-m")]),t._v("后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。")])]),t._v(" "),a("li",[a("p",[t._v("嫌麻烦不想输入"),a("code",[t._v('-m "xxx"')]),t._v("行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git commit")]),t._v("命令执行成功后会告诉你，"),a("code",[t._v("1 file changed")]),t._v("：1个文件被改动（我们新添加的README.txt文件）；"),a("code",[t._v("1 insertions")]),t._v("：插入了两行内容（README.txt有"),a("code",[t._v("一")]),t._v("行内容）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git commit --amend")]),t._v("命令可以对上一次未提交的commit做修改")])])]),t._v(" "),a("h3",{attrs:{id:"_1-3保存多个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3保存多个","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.3保存多个")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("为什么Git添加文件需要"),a("code",[t._v("add")]),t._v("，"),a("code",[t._v("commit")]),t._v("一共两步呢？因为"),a("code",[t._v("commit")]),t._v("可以一次提交很多文件，所以你可以多次"),a("code",[t._v("add")]),t._v("不同的文件，比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("$ git add file1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n$ git add file2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt file3"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n$ git commit "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{attrs:{class:"token string"}},[t._v('"add 3 files."')]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-4提交到远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4提交到远程仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.4提交到远程仓库")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("提交远程仓库")]),t._v(" "),a("p",[a("code",[t._v("git remote add origin https://github.com/Overcase/test3.git")])])]),t._v(" "),a("li",[a("p",[t._v("push到GitHub上")]),t._v(" "),a("p",[a("code",[t._v("git push -u origin master")])])]),t._v(" "),a("li",[a("p",[t._v("clone github 上的仓库")]),t._v(" "),a("p",[a("code",[t._v("git clone https://github.com/Overcase/test3.git")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-5修改远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5修改远程仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.5修改远程仓库")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("修改远程仓库")]),t._v(" "),a("p",[a("code",[t._v("git remote set-url origin [url]")])])]),t._v(" "),a("li",[a("p",[t._v("先删后加")]),t._v(" "),a("p",[a("code",[t._v("git remote rm origin")]),t._v(" "),a("code",[t._v("git remote add origin [url]")])])]),t._v(" "),a("li",[a("p",[t._v("clone github 上的仓库")]),t._v(" "),a("p",[a("code",[t._v("git clone https://github.com/Overcase/test3.git")])])]),t._v(" "),a("li",[a("p",[t._v("clone github branch")]),t._v(" "),a("p",[a("code",[t._v("git clone -b [分支名] https://github.com/Overcase/test3.git")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-6-fetch远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-fetch远程仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.6 fetch远程仓库")]),t._v(" "),a("p",[a("code",[t._v("git fetch origin wxh:xl_wxh")]),t._v(" fetch远程仓库到本地xl_whx分支")]),t._v(" "),a("h3",{attrs:{id:"_1-7版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7版本回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.7版本回退")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当然了，在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用"),a("code",[t._v("git log")]),t._v("命令查看：")]),t._v(" "),a("p",[a("code",[t._v("git log")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git log")]),t._v("命令显示从最近到最远的提交日志.")]),t._v(" "),a("p",[t._v("如果嫌输出信息太多，看得眼花缭乱的，可以试试加上"),a("code",[t._v("--pretty=oneline")]),t._v("参数：")]),t._v(" "),a("p",[a("code",[t._v("$ git log --pretty=oneline")])])]),t._v(" "),a("li",[a("p",[t._v("现在，我们要把当前版本"),a("code",[t._v("append GPL")]),t._v("回退到上一个版本"),a("code",[t._v("add distributed")]),t._v("，就可以使用"),a("code",[t._v("git reset")]),t._v("命令：")]),t._v(" "),a("p",[a("code",[t._v("$ git reset --hard HEAD^")])])]),t._v(" "),a("li",[a("p",[t._v("首先，Git必须知道当前版本是哪个版本，在Git中，用"),a("code",[t._v("HEAD")]),t._v("表示当前版本，也就是最新的提交"),a("code",[t._v("1094adb...")]),t._v("（注意我的提交ID和你的肯定不一样），上一个版本就是"),a("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),a("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写100个"),a("code",[t._v("^")]),t._v("比较容易数不过来，所以写成"),a("code",[t._v("HEAD~100")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("比如要返回下面这个版本")])]),t._v(" "),a("li",[a("p",[t._v("commit 后面是这个版本的id")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git log\ncommit e475afc93c209a690c39c13a46716e8fa000c366 (HEAD -> master)\n")])])])]),t._v(" "),a("li",[a("p",[t._v("想返回这个版本则（id可以简写，就写前几位，比如e475afc  "),a("code",[t._v("git会根据前几位自动查找")]),t._v("）")])]),t._v(" "),a("li",[a("p",[t._v("hard当前环境的版本指针")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git reset --hard e475afc93c209a690c39c13a46716e8fa000c366\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-8申请密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8申请密钥","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.8申请密钥")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用git bash打开命令行工具")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  # 切换到ssh文件夹\n  cd ~./ssh\n  \n  # 可以一直回车\n  ssh-keygen\n")])])])]),t._v(" "),a("li",[a("p",[t._v("然后复制到git账户的密钥中")])])])])}],!1,null,null,null);v.options.__file="git.md";e.default=v.exports}}]);